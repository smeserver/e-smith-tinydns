Index: e-smith-tinydns/e-smith-tinydns.spec
diff -u /dev/null e-smith-tinydns/root/etc/e-smith/db/hosts/migrate/20tinydns:1.1
--- /dev/null	Tue Jan 13 16:09:48 2004
+++ e-smith-tinydns/root/etc/e-smith/db/hosts/migrate/20tinydns	Tue Jan 13 16:09:17 2004
@@ -0,0 +1,33 @@
+{
+    use esmith::ConfigDB;
+    my $confdb = esmith::ConfigDB->open_ro;
+    my $systemname = $confdb->get_value('SystemName');
+    my $domainname = $confdb->get_value('DomainName');
+    my $fqdn = $systemname . '.' . $domainname;
+    die "Cannot determine FQDN of server!" unless $fqdn;
+
+    # Make sure that the DNSAlias property of the proper name of the server is
+    # set to "no", unless the $LocalIP has a configured PTR record already.
+    my $self_host = undef;
+    my $work_to_do = 1;
+    foreach my $host ($DB->get_all())
+    {
+        next unless $host->prop('HostType') eq 'Self';
+        if ($host->{key} eq $fqdn)
+        {
+            $self_host = $host;
+        }
+        if ($host->prop('DNSAlias') && ($host->prop('DNSAlias') eq 'no'))
+        {
+            # It already has one configured. Nothing to do.
+            $work_to_do = 0;
+            last;
+        }
+    }
+    if ($work_to_do)
+    {
+        die "Failed to find host record for server's proper name!"
+            unless $self_host;
+        $self_host->set_prop('DNSAlias', 'no');
+    }
+}
Index: e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/00functions
diff -u e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/00functions:1.5 e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/00functions:1.6
--- e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/00functions:1.5	Mon Jan 12 11:54:05 2004
+++ e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/00functions	Tue Jan 13 16:09:17 2004
@@ -64,5 +64,48 @@
 
     sub get_local_domainname { return $DomainName; }
 
+
+    #--------------------------------------------------------
+    # Returns the IP Address of the host in question.
+    #--------------------------------------------------------
+    sub host2ip
+    {
+        my $host = shift;
+        my $ip = undef;
+        die "Host record must have HostType prop!"
+            unless my $hosttype = $host->prop('HostType');
+
+        if ($hosttype eq 'Self')
+        {
+            $ip = $LocalIP;
+        }
+        $ip ||= $host->prop('ExternalIP') || $host->prop('InternalIP');
+        return $ip;
+    }
+
+    #--------------------------------------------------------
+    # Returns a hash of IPs to hostnames, representing the 
+    # chosen hostnames for reverse dns lookups for each IP.
+    #--------------------------------------------------------
+    sub get_reverse_lookup_choices
+    {
+        my %reverse_lookups = ();
+        foreach my $host ($hosts->hosts())
+        {
+            # A remote host must be a DNS alias. 
+            next if $host->prop('HostType') eq 'Remote';
+
+            my $alias = $host->prop('DNSAlias') || "yes";
+            if ($alias eq "no")
+            {
+                # This host is not a DNS alias, so we should make note of it
+                # for reverse DNS lookup purposes.
+                my $ip = host2ip($host);
+                $reverse_lookups{$ip} = $host->{key};
+            }
+        }
+        return %reverse_lookups;
+    }
+
     $OUT = '';
 }
Index: e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/60hostARecords
diff -u e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/60hostARecords:1.6 e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/60hostARecords:1.7
--- e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/60hostARecords:1.6	Tue Jan 13 11:40:32 2004
+++ e-smith-tinydns/root/etc/e-smith/templates/var/service/tinydns/root/data/60hostARecords	Tue Jan 13 16:09:17 2004
@@ -6,20 +6,33 @@
         $OUT .= "# A Records for Hosts in $domain\n";
         foreach my $h ($hosts->get_hosts_by_domain($domain))
         {
-            my $anIP = undef;
-            next unless my $hosttype = $h->prop('HostType');
+            my $anIP = host2ip($h);
 
-            if ($hosttype eq 'Self')
+            my $prefixchar = '+';
+            my %reverse_lookups = get_reverse_lookup_choices();
+            # If this IP is spoken for, then we know which host to use for the
+            # reverse DNS lookup PTR.
+            if (exists $reverse_lookups{$anIP})
             {
-                $anIP = $LocalIP;
+                my $reverse_host = $reverse_lookups{$anIP};
+                if ($reverse_host eq $h->key)
+                {
+                    $prefixchar = '=';
+                }
+            }
+            else
+            {
+                # Otherwise, we'll just use the first host that comes along.
+                # Have we picked one already?
+                unless (exists $allocated_ips{$anIP})
+                {
+                    $prefixchar = '=';
+                }
             }
-            $anIP ||= $h->prop('ExternalIP') || $h->prop('InternalIP');
-            # If the ip is already taken, make this record an alias.
-            my $prefixchar = '=';
-            $prefixchar = '+' if exists $allocated_ips{$anIP};
-            $OUT .= $prefixchar . $h->key . ":$anIP\n";
             # Note that this ip is taken.
-            $allocated_ips{$anIP} = 1 unless exists $allocated_ips{$anIP};
+            $allocated_ips{$anIP} = 1;
+
+            $OUT .= $prefixchar . $h->key . ":$anIP\n";
         }
         $OUT .= "\n";
     }
